data %>%
apply(1, function(row, avgPatternData) {
print(row)
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == row["interval"]) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData)
data %>%
apply(1, function(row, avgPatternData) {
print(row)
if (is.na(row["steps"])) {
print(str(row))
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == row["interval"]) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData)
data %>%
apply(1, function(row, avgPatternData) {
print(row)
if (is.na(row["steps"])) {
print(str(row))
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == row["interval"]) %>%
extract2("mean") %T>%
print()
)
}
row
},
avgPatternData = avgPatternData)
avgPatternData
data %>%
apply(1, function(row, avgPatternData) {
print(row["interval"])
if (is.na(row["steps"])) {
print(str(row))
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == row["interval"]) %>%
extract2("mean") %T>%
print()
)
}
row
},
avgPatternData = avgPatternData)
data %>%
apply(1, function(row, avgPatternData) {
print(row["interval"])
if (is.na(row["steps"])) {
print(str(row))
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean") %T>%
print()
)
}
row
},
avgPatternData = avgPatternData)
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean") %T>%
print()
)
}
row
},
avgPatternData = avgPatternData) %>%
as.data.frame()
data %>%
apply(1, function(row) any(is.na(row))) %>%
as.numeric() %>%
sum()
#
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean") %T>%
print()
)
}
row
},
avgPatternData = avgPatternData) %>%
as.data.frame() %>%
View()
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>%
as.data.frame() %>%
t() %>%
View()
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>%
as.data.frame() %>%
t() %>%
str()
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>%
t() %>%
str()
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>%
as.data.frame() %>%
t() %>%
mutate(
steps = as.numeric(steps),
date  = as.POSIXct(date, "%Y-%m-%d"),
interval = as.numeric(interval)
) %>%
str()
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>%
as_data_frame() %>%
t() %>%
mutate(
steps = as.numeric(steps),
date  = as.POSIXct(date, "%Y-%m-%d"),
interval = as.numeric(interval)
) %>%
str()
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>%
t() %>%
as_data_frame()
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>%
t() %>%
as.data.frame()
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>%
t() %>%
as.data.frame() %>%
mutate(
steps = as.numeric(steps),
# date  = as.POSIXct(date, "%Y-%m-%d"),
interval = as.numeric(interval)
)
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>%
t() %>%
as.data.frame() %>%
mutate(
steps = as.numeric(steps),
# date  = as.POSIXct(date, "%Y-%m-%d"),
interval = as.numeric(interval)
) ->
replacedNAData
replacedNAData$date <- as.POSIXct(replacedNAData$date, form = "%Y-%m-%d")
ggplot(aes(date, steps), data = replacedNAData) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(title = "Steps ") +
ylab("Steps") +
xlab("Date")
replacedNAData
head(replacedNAData)
max(replacedNAData$steps)
ggplot(data = replacedNAData, aes(date, steps)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(title = "Steps ")
replacedNAData %>% group_by(date )
replacedNAData %>% group_by(date) %>% summarise(mean(steps))
replacedNAData %>%
group_by(date) %>%
summarise(mean(steps)) %>%
ggplot(data = ., aes(date, steps)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(title = "Steps ") +
ylab("Steps") +
xlab("Date")
replacedNAData %>%
group_by(date) %>%
summarise(mean(steps))
replacedNAData %>%
group_by(date) %>%
summarise(mean(steps)) %>%
set_names(c("date", "mean")) %>%
ggplot(data = ., aes(date, mean)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(title = "Steps ") +
ylab("Steps") +
xlab("Date")
replacedNAData %>%
group_by(date) %>%
summarise(mean(steps))
replacedNAData
avgPatternData
head(data)
head(replacedNAData)
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>% View()
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>% View()
t() %>%
as.data.frame() %>% View()
#
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>%
t() %>%
as.data.frame() %>% View()
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>%
t() %>%
as.data.frame() %>% names()
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>%
t() %>%
as.data.frame() ->
# mutate(
#   steps = as.numeric(steps),
#   # date  = as.POSIXct(date, "%Y-%m-%d"),
#   interval = as.numeric(interval)
# ) ->
replacedNAData
replacedNAData$steps <- as.nuemric(replacedNAData$steps)
replacedNAData$date <- as.POSIXct(replacedNAData$date, form = "%Y-%m-%d")
replacedNAData %>%
group_by(date) %>%
summarise(mean(steps)) %>%
set_names(c("date", "mean")) %>%
ggplot(data = ., aes(date, mean)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(title = "Steps ") +
ylab("Steps") +
xlab("Date")
replacedNAData$steps <- as.numeric(replacedNAData$steps)
replacedNAData$date <- as.POSIXct(replacedNAData$date, form = "%Y-%m-%d")
replacedNAData %>%
group_by(date) %>%
summarise(mean(steps)) %>%
set_names(c("date", "mean")) %>%
ggplot(data = ., aes(date, mean)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(title = "Steps ") +
ylab("Steps") +
xlab("Date")
replacedNAData
head(replacedNAData)
data %>%
apply(1, function(row) any(is.na(row))) %>%
as.numeric() %>%
sum()
#
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>%
t() %>%
as.data.frame() ->
# mutate(
#   steps = as.numeric(steps),
#   # date  = as.POSIXct(date, "%Y-%m-%d"),
#   interval = as.numeric(interval)
# ) ->
replacedNAData
replacedNAData[1,1]
data %>%
apply(1, function(row, avgPatternData) {
if (is.na(row["steps"])) {
row %<>%
inset(
"steps",
avgPatternData %>%
filter(interval == as.numeric(row["interval"])) %>%
extract2("mean")
)
}
row
},
avgPatternData = avgPatternData) %>%
t() %>%
as.data.frame(stringsAsFactors = FALSE) %>%
mutate(
steps = as.numeric(steps),
# date  = as.POSIXct(date, "%Y-%m-%d"),
interval = as.numeric(interval)
) ->
replacedNAData
replacedNAData$date <- as.POSIXct(replacedNAData$date, form = "%Y-%m-%d")
replacedNAData %>%
group_by(date) %>%
summarise(mean(steps)) %>%
set_names(c("date", "mean")) %>%
ggplot(data = ., aes(date, mean)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(title = "Steps ") +
ylab("Steps") +
xlab("Date")
mean(replacedNAData$steps)
meand(data$steps)
mean(data$steps)
mean(data$steps, na.rm = TRUE)
knit_with_parameters('~/Documents/Coursera/05_Reproducable Research/week1/programmingAssignment/RepData_PeerAssessment1/PA1_template.Rmd')
library(knitr)
dir()
knit2html("PA1_template.Rmd","PA1_template.html")
markdownToHTML("PA1_template.Rmd","PA1_template.html")
library(markdown)
markdownToHTML("PA1_template.Rmd","PA1_template.html")
knit_with_parameters('~/Documents/Coursera/05_Reproducable Research/week1/programmingAssignment/RepData_PeerAssessment1/PA1_template.Rmd')
